(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{640:function(e,o,t){"use strict";t.r(o);var s=t(5),a=Object(s.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[e._v("#")]),e._v(" cookie")]),e._v(" "),t("p",[e._v("       Cookie，有时也用其复数形式 Cookies。类型为“小型文本文件”，是某些网站为了辨别用户身份，进行Session跟踪而储存在用户本地终端上的数据（通常经过加密），由用户客户端计算机暂时或永久保存的信息.我们这里介绍的就是两种常用的本地存储。"),t("br"),e._v("\n       存储内容大小一般支持5MB左右(不同浏览器可能还不一样).浏览器端通过Window.sessionStorage和Window.localStorage属性来实现本地存储机制。")]),e._v(" "),t("h3",{attrs:{id:"localstorage和sessionstorage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localstorage和sessionstorage"}},[e._v("#")]),e._v(" LocalStorage和SessionStorage")]),e._v(" "),t("p",[e._v("       这两个的Api基本一致，仅有些许差别。")]),e._v(" "),t("blockquote",[t("ol",[t("li",[e._v("Local/SessionStorage.setItem('key',\"value')"),t("br"),e._v("\n该方法接受一个键和值作为参数，会把键值对添加到存储中，如果键名存在，则更新其对应的值。")]),e._v(" "),t("li",[e._v("Local/SessionStorage.getItem('person')"),t("br"),e._v("\n该方法接受一个键名作为参数，返回键名对应的值。")]),e._v(" "),t("li",[e._v("Local/SessionStorage.removeItem('key')"),t("br"),e._v("\n该方法接受一个键名作为参数，并把该键名从存储中删除。")]),e._v(" "),t("li",[e._v("Local/SessionStorage.clear()"),t("br"),e._v("\n该方法会清空存储中的所有数据。")])])]),e._v(" "),t("p",[e._v("       存储时传入的value值不是字符串类型时，其会帮我们转为字符串类型，当我们知道对象调用toString方法后，无法看到内部结构，因此传入对象数据时需要我们自己转成可以看到结构的字符串类型，例"),t("code",[e._v("JSON.stringify()和JSON.parse()")]),e._v("这样转成的字符串仍然可以看到其中的键值对。\n       注意如下:")]),e._v(" "),t("blockquote",[t("ol",[t("li",[e._v("SessionStorage存储的内容会随着浏览器窗口关闭而消失。")]),e._v(" "),t("li",[e._v("LocalStorage存储的内容，需要手动清除才会消失。")]),e._v(" "),t("li",[e._v("xxxxxStorage.getItem(xxx)如果xxx对应的value获取不到，那么getltem的返回值是null。")]),e._v(" "),t("li",[e._v("SON.parse(nul1)的结果依然是null。")])])])])}),[],!1,null,null,null);o.default=a.exports}}]);