(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{653:function(t,a,s){"use strict";s.r(a);var e=s(5),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"事件处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件处理"}},[t._v("#")]),t._v(" 事件处理")]),t._v(" "),s("p",[t._v("       前文我们介绍了在vue中的数据绑定，也简单介绍了数据绑定的原理。这本文中我们要介绍的是vue的事件监听。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 基本写法： --\x3e")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("el-button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("click")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("trySomething"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("点击"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("el-button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  //v-on:click --\x3e @click\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// js--\x3emethods")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trySomething")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我触发了一个点击事件"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你好"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("p",[t._v("       这里我们展示是点击事件的写法，以及简写形式。在项目开发中仅仅只有点击事件我们无法完成很多复杂的任务，例如说hover触发、更改value值触发等，因此我们需要使用与功能匹配的时间修饰符。"),s("br"),t._v("\n       当然如果你使用了类似于"),s("a",{attrs:{href:"https://element.eleme.cn/#/zh-CN/component/installation",target:"_blank",rel:"noopener noreferrer"}},[t._v("element-ui"),s("OutboundLink")],1),t._v("的组件库，每一个组件它都会为你提供很多的方法供你使用。")]),t._v(" "),s("h3",{attrs:{id:"事件使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件使用"}},[t._v("#")]),t._v(" 事件使用")]),t._v(" "),s("p",[t._v("       在html和js中如果需要调用某个函数，trySomething和trySomething()在没有参数的情况下是一样的，有参数的话自然选择后一种。"),s("br"),t._v("\n       当函数有返回值且想要将返回值显示在页面上，则可以"),s("code",[t._v('<div style="color:green">{{ trySomething() } }</div>')]),t._v("，显示效果为"),s("span",{staticStyle:{color:"green"}},[t._v("你好")]),t._v("。"),s("span",{staticStyle:{color:"red"}},[t._v("注意：这里必须携带(),否则会将整个函数作为插入的内容展示")]),t._v(" 。"),s("strong",[t._v("[ 我是实在没想到，写在md代码区内也会被解析，所以这里的格式有点问题，右边的双花括号间多了个空格，不便之处还请见谅 ]")])]),t._v(" "),s("h3",{attrs:{id:"事件修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件修饰符"}},[t._v("#")]),t._v(" 事件修饰符")]),t._v(" "),s("p",[s("code",[t._v('@click.prevent/stop/... = "trySomething"')])]),t._v(" "),s("blockquote",[s("p",[t._v("事件修饰符")]),t._v(" "),s("ol",[s("li",[t._v("prevent:阻止默认事件（常用）;比如阻止a标签的跳转")]),t._v(" "),s("li",[t._v("stop:阻止事件冒泡（常用）;")]),t._v(" "),s("li",[t._v("once:事件只触发一次（常用）;")]),t._v(" "),s("li",[t._v("capture:使用事件的捕获模式;")]),t._v(" "),s("li",[t._v("self:只有event.target是当前操作的元素是才触发事件;")]),t._v(" "),s("li",[t._v("passive:事件的默认行为立即执行，无需等待事件回调执行完毕;")])])]),t._v(" "),s("h3",{attrs:{id:"键盘事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#键盘事件"}},[t._v("#")]),t._v(" 键盘事件")]),t._v(" "),s("p",[t._v("       事件修饰符大多是用于解决事件的捕获与触发的问题，如果我们希望在键盘按下某些键，例如enter、Q、W等时触发事件时，就需要使用到键盘事件了。")]),t._v(" "),s("p",[s("code",[t._v('@keyup/keydown.enter/delete/... = "trySomething"')])]),t._v(" "),s("blockquote",[s("p",[t._v("键盘事件")]),t._v(" "),s("ol",[s("li",[t._v("keyup/keydown：分别为键盘抬起和按下")]),t._v(" "),s("li",[t._v("事件修饰符")])]),t._v(" "),s("blockquote",[s("p",[t._v("回车 ==> enter"),s("br"),t._v("\n删除 ==> delete （这里有两个键，删除del和回退[加号和等号旁]都可以触发，）"),s("br"),t._v("\n退出 ==> esc"),s("br"),t._v("\n空格 ==> space"),s("br"),t._v("\n制表符 ==> tab  （这个键有点特殊，必须和keydown配合）"),s("br"),t._v("\n上 ==> up"),s("br"),t._v("\n下 ==> down"),s("br"),t._v("\n左 ==> left"),s("br"),t._v("\n右 ==> right")])])]),t._v(" "),s("p",[t._v("       假设上面的9个事件修饰符不满足你的要求，在vue2中可以自己指定。我们知道键盘的每一个键都有自己的键名和键值。因此我们可以使用@keyup/keydown.+键名的方法绑定该键的键盘事件，"),s("span",{staticStyle:{color:"red"}},[t._v("注意：当键名为两个或以上单词时，这时需要首字母小写，且单词间以'-'连接")]),s("br"),t._v("\n       键有键值和键名，键名可以作为键盘事件的修饰，自然键值也可以作为键盘事件的修饰。"),s("span",{staticStyle:{color:"red"}},[t._v("注意：在vue3中此功能已被废弃，因为兼容问题")]),s("br"),t._v("\n       键值除了作为键盘事件的修饰，也可以用于自定义键名。"),s("code",[t._v("Vue.config.keyCodes.自定义键名 = 键值")]),s("span",{staticStyle:{color:"red"}},[t._v(" 注意：在vue3中此功能也已被废弃，因为兼容问题且究其根本还是使用了键值")]),s("br"),t._v("\n       在上文的介绍中我们知道有一个键有点奇怪—tab,原因是，tab键原本就有修改焦点的作用，当使用keyup时，未等键抬起，焦点已经转移且新获取焦点的元素没有绑定键盘事件，自然事件就会‘失效’，和这个类似的键还有四个:ctrl、Alt、Shift、meta/win,有两种解决方法。")]),t._v(" "),s("blockquote",[s("p",[t._v("特殊的键盘按键")]),t._v(" "),s("ol",[s("li",[t._v("配合keyup使用时，需要按下修饰键的同时，再按下其他键，随后释放其他键，这时定义事件才会正常触发")]),t._v(" "),s("li",[t._v("配合keydown使用时，正常触发。")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);