(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{569:function(t,s,a){t.exports=a.p+"assets/img/assembly.c7b535e8.png"},570:function(t,s,a){t.exports=a.p+"assets/img/vcAvm.5e8b4094.png"},637:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"组件和模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件和模块"}},[t._v("#")]),t._v(" 组件和模块")]),t._v(" "),n("h3",{attrs:{id:"什么是组件-什么是模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是组件-什么是模块"}},[t._v("#")]),t._v(" 什么是组件？什么是模块?")]),t._v(" "),n("p",[t._v("       如果将人理解成一个整体，模块就是保证人这个整体存活下去的系统，每个系统/模块完成某些功能。在代码层面，我们可以理解为完成某一些功能的.js文件。"),n("br"),t._v("\n       同样将人理解为一个整体，组件就相当于我们的某个或一些细胞，单独能完成一定功能的同时，也能和其他细胞配合。在vue中，项目的就是一个集合体，每一个组件都是其组成部分。当然和人与细胞不太一样的是，在vue中，组件的组成部分仍然可以是组件，也就是可以嵌套。组件表现在代码上就是某一个或几个功能的集合的.vue文件，因为其是独立的一部分，所以在任何需要它的地方都可以使用。"),n("br"),t._v(" "),n("img",{attrs:{src:a(569),alt:"组件示意图"}}),n("br"),t._v("\n       该图中每一个颜色不衔接的区域都可以视为一个组件。 "),n("br")]),t._v(" "),n("h3",{attrs:{id:"我们为什么要使用组件这种结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#我们为什么要使用组件这种结构"}},[t._v("#")]),t._v(" 我们为什么要使用组件这种结构?")]),t._v(" "),n("p",[t._v("       请大家回想回想一下，当初我们初学html时，我们介绍过js的引入、css的引入，最终汇集在html上进行使用，假设我们需要其中的某一项功能，需要将其应用于另一html文件中，那我们会怎么做？重写一份？不不不，相信大家都不愿意在写一份一模一样的代码，我们一般会在原html中找到该功能模块的代码，然后找到支持其功能的js和支持其样式的css，而不幸的是，这些css和js往往可能在不同的文件中，这样很费时费力。"),n("br"),t._v("\n       针对这种情况，vue、react等使用了组件化的概念，将某一功能的html、js、css代码汇集在一起，以这样的方式方便寻找和复用，只要你还记得设计组件时给它起的名字。")]),t._v(" "),n("h2",{attrs:{id:"创建一个组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建一个组件"}},[t._v("#")]),t._v(" 创建一个组件")]),t._v(" "),n("p",[t._v("       我们先了解两个概念，非单文件组件和单文件组件。在我们的项目编写中使用的是单文件组件，因为工作中的项目几乎不可能独立完成，因此你写的组件完全有可能被他人使用，为了促进伙伴间的关系，还请书写单文件组件。")]),t._v(" "),n("blockquote",[n("ol",[n("li",[t._v("非单文件组件：一个文件中有n个组件")]),t._v(" "),n("li",[t._v("单文件组件：一个文件仅中有1个组件")])])]),t._v(" "),n("div",{staticClass:"language-vue extra-class"},[n("pre",{pre:!0,attrs:{class:"language-vue"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("     \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 创建一个组件，写法和正常的vue文件书写方式一致 --\x3e")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 因为大家看这些教程，基本都奔着项目开发去的，因此在这里我就直接展示在项目中的写法--\x3e")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 至于在html中使用的代码，如有需要，联系博主添加 --\x3e")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ shwoInfo }}"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script"}},[n("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BreadCrumb"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("shwoInfo")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是一个组件"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("div",{staticClass:"language-vue extra-class"},[n("pre",{pre:!0,attrs:{class:"language-vue"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ shwoInfo }}"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IndependentQuery")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--  使用声明的组件  --\x3e")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- <IndependentQuery> </IndependentQuery/> 或者这种也可 --\x3e")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token script"}},[n("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" IndependentQuery "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./independentQuery'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'filghtInfo'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("components")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("IndependentQuery"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个组件")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("shwoInfo")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是使用组件的地方"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("       组件命名的规范，在vue项目中，对于组件的命名也有一定的要求，当然如果你不按这种规范书写也可能没有问题，但为了安全还是推荐遵守规范！")]),t._v(" "),n("blockquote",[n("ol",[n("li",[t._v("单个单词： school / School")]),t._v(" "),n("li",[t._v("多个单词： IndependentQuery / 'independent-query'")]),t._v(" "),n("li",[t._v("尽可能避免与已有的html标签重名")])])]),t._v(" "),n("h2",{attrs:{id:"初学vuecomponents和this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初学vuecomponents和this"}},[t._v("#")]),t._v(" 初学Vuecomponents和this")]),t._v(" "),n("p",[t._v("       从名字上我们大致知道Vuecomponents是vue的组件对象，它是不需要程序员自己调用的。具体到vue项目中且以上文的IndependentQuery组件为例，当我们使用已经声明的组件<IndependentQuery/>时，vue会自动帮我们new一个IndependentQuery的实例对象，即执行new Vuecomponents(options)，"),n("span",{staticStyle:{color:"red"}},[t._v("我们每次调用自定义组件时，vue都会给我们一个新的组件实例对象。")]),n("br"),t._v("\n       在vue中this是一个使用非常频繁的单词，它往往是一个指代关系，指代对象是vm（View Model），在前面我们提到过"),n("RouterLink",{attrs:{to:"/demo/basis/template.html"}},[t._v("MVVM模型")]),t._v("，即我们在js中的所有代码都可以通过this读取到自身.vue文件的所有数据和方法。"),n("br"),t._v("\n       因为我们每次使用组件时，Vuecomponents都会给我们一个新的实例对象，所以他们的this指向它们各自的vm（因为他们都是Vuecomponents创建出来的，这里也可称为vc），正是因为他们的this指向不同，会产生组件间的通信问题，这个后面会讲，这里知道这个问题就行。")],1),t._v(" "),n("blockquote",[n("p",[t._v("关于this指向:")]),t._v(" "),n("ol",[n("li",[t._v("组件配置中:"),n("br"),t._v("\ndata函数、methods中的函数、watch中的函数、computed中的函数它们的this均是【VueComponent实例对象/vc】")]),t._v(" "),n("li",[t._v("new Vue(options)配置中:"),n("br"),t._v("\ndata函数、methods中的函数、watch中的函数、computed中的函数它们的this均是【Vue实例对象/vm】。")])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(570),alt:"vc与vm的关系"}})]),t._v(" "),n("p",[t._v("       在图中我们可以看到，vc的隐式原型对象指向了vm的原型对象（"),n("code",[t._v("VueComponent.prototype.__proto__ === Vue.prototype")]),t._v("），这就导致vm和vc的功能基本一致，所以我们编写的.vue文件才会是相同的样式，也因为这条指向关系的存在，后期我们介绍组件间通信的时候也可以用到。")])])}),[],!1,null,null,null);s.default=e.exports}}]);