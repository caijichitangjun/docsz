(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{592:function(s,a,t){s.exports=t.p+"assets/img/variable.240f16dc.png"},593:function(s,a,t){s.exports=t.p+"assets/img/variable2.f000f194.png"},594:function(s,a,t){s.exports=t.p+"assets/img/nesting.06be5c53.png"},595:function(s,a,t){s.exports=t.p+"assets/img/hoverother.e785fba0.png"},596:function(s,a,t){s.exports=t.p+"assets/img/quote.7caee55e.png"},597:function(s,a,t){s.exports=t.p+"assets/img/otherQuote.2af53b9a.png"},598:function(s,a,t){s.exports=t.p+"assets/img/mixin.9df1aabd.png"},599:function(s,a,t){s.exports=t.p+"assets/img/extend.a7fa688a.png"},600:function(s,a,t){s.exports=t.p+"assets/img/myFunction.8314dd21.png"},601:function(s,a,t){s.exports=t.p+"assets/img/if.afdc3d9c.png"},602:function(s,a,t){s.exports=t.p+"assets/img/for.ade38b5f.png"},603:function(s,a,t){s.exports=t.p+"assets/img/eachIN.aba330c3.png"},604:function(s,a,t){s.exports=t.p+"assets/img/while.72807b75.png"},660:function(s,a,t){"use strict";t.r(a);var e=t(5),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"什么是-css-预处器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-css-预处器"}},[s._v("#")]),s._v(" 什么是 CSS 预处器")]),s._v(" "),e("p",[s._v("       通俗的说，CSS预处理器用一种专门的编程语言，进行Web页面样式设计，然后再编译成正常的CSS文件，以供项目使用。CSS 预处理器为CSS增加一些编程的特性，可以在CSS中使用变量、简单的逻辑程序、函数等等在编程语言中的一些基本特性，可以让CSS更加简洁、适应性更强、可读性更佳，易于维护等诸多好处。")]),s._v(" "),e("h3",{attrs:{id:"背景介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#背景介绍"}},[s._v("#")]),s._v(" 背景介绍")]),s._v(" "),e("p",[s._v("       SASS(.scss)。于2007年诞生，最早也是最成熟的CSS预处理器，拥有ruby社区的支持和compass这一最强大的css框架，目前受LESS影响，已经进化到了全面兼容CSS的SCSS(本文中以sass称呼)。")]),s._v(" "),e("h2",{attrs:{id:"sass-css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sass-css"}},[s._v("#")]),s._v(" sass => css")]),s._v(" "),e("p",[s._v("       安装sass处理工具，在B站上有很多的教程，这里推荐的是较为简洁的，"),e("a",{attrs:{href:"https://www.bilibili.com/video/BV17W411w7nL?p=3",target:"_blank",rel:"noopener noreferrer"}},[s._v("【Web前端】Sass基础"),e("OutboundLink")],1),s._v("；博主当时看的是"),e("a",{attrs:{href:"https://www.bilibili.com/video/BV1Zg4y1v75U?spm_id_from=333.999.0.0",target:"_blank",rel:"noopener noreferrer"}},[s._v("SCSS从入门到实战"),e("OutboundLink")],1),s._v("，这个视频略显繁琐。如果不关心安装过程请从13集观看。")]),s._v(" "),e("h3",{attrs:{id:"项目准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目准备"}},[s._v("#")]),s._v(" 项目准备")]),s._v(" "),e("p",[s._v("       需要准备两个文件夹分别保存处理前的"),e("code",[s._v(".scss")]),s._v("文件和处理后的"),e("code",[s._v(".css")]),s._v("文件。")]),s._v(" "),e("div",{staticClass:"language-scss extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scss"}},[e("code",[s._v("sass/     "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该目录存储scss文件")]),s._v("\ncss/      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该目录存储css文件")]),s._v("\n")])])]),e("p",[s._v("       在我们编译好"),e("code",[s._v(".scss")]),s._v("文件，使用命令"),e("code",[s._v("sass sass/test.scss:css/test.css")]),s._v("，转换为常见的"),e("code",[s._v(".css")]),s._v("文件。当然如果不想一遍遍的转化，也可以使用自动监视watch。命令为"),e("code",[s._v("sass --watch sass:css")]),s._v("。")]),s._v(" "),e("h2",{attrs:{id:"sass语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sass语法"}},[s._v("#")]),s._v(" sass语法")]),s._v(" "),e("h3",{attrs:{id:"sass变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sass变量"}},[s._v("#")]),s._v(" sass变量")]),s._v(" "),e("p",[s._v("       sass可以定义一个变量，定义方式为"),e("code",[s._v("$name = value")]),s._v("，作为变量，其作用的范围受作用域限制，在类选择器内定义时，也可以加上"),e("code",[s._v("!global")]),s._v("转化局部变量为全局变量。\n"),e("img",{attrs:{src:t(592),alt:"定义变量"}}),e("br"),s._v("\n       当然变量不会局限于定义value值，也可以定义key、选择器等。使用是需要"),e("code",[s._v("#{variable}")]),s._v(" "),e("img",{attrs:{src:t(593),alt:"定义变量"}})]),s._v(" "),e("h4",{attrs:{id:"number及相关函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#number及相关函数"}},[s._v("#")]),s._v(" number及相关函数")]),s._v(" "),e("p",[s._v("       number是sass中的一种数据类型，"),e("code",[s._v("5")]),s._v("是number类型，"),e("code",[s._v("5px")]),s._v("同样也是number类型，数字间同样可以进行加减乘除，相应的也要遵守四则运算规则，另外的，当数字类型带单位进行乘法运算时，最多只允许乘法的一方携带单位，在sass乘法运算中，单位也会参与预算，如"),e("code",[s._v("1cm*1cm=1cm2")]),s._v("。\n       在sass中还有为数字提供的一些函数，如下：")]),s._v(" "),e("ul",[e("li",[s._v("abs():取绝对值")]),s._v(" "),e("li",[s._v("round():四舍五入")]),s._v(" "),e("li",[s._v("ceil():向上取整")]),s._v(" "),e("li",[s._v("floor():向下取整")]),s._v(" "),e("li",[s._v("percentage():取百分比")]),s._v(" "),e("li",[s._v("min():取最小的")]),s._v(" "),e("li",[s._v("max():取最大的")])]),s._v(" "),e("h4",{attrs:{id:"string及相关函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string及相关函数"}},[s._v("#")]),s._v(" string及相关函数")]),s._v(" "),e("p",[s._v("       number也是sass中的一种数据类型，"),e("code",[s._v("'name'")]),s._v("和"),e("code",[s._v("name")]),s._v("都算作是字符串，同样可以运用运算符连接字符串，如下:")]),s._v(" "),e("div",{staticClass:"language-scss extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scss"}},[e("code",[s._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'space'")]),s._v("  ==> "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'namespace'")]),s._v("\nname "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 800      ==> "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name-800'")]),s._v("\nname "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" dog      ==> "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name/dog'")]),s._v("\n")])])]),e("p",[s._v("       在sass中还有为字符串提供的一些函数，如下：")]),s._v(" "),e("ul",[e("li",[s._v("to-upper-case():全部转为大写")]),s._v(" "),e("li",[s._v("to-lower-case():全部转为小写")]),s._v(" "),e("li",[s._v("str-length():返回字符串长度")]),s._v(" "),e("li",[s._v("str-index(String,childrenStr) 返回指定字符在字符串中首次出现的位置")]),s._v(" "),e("li",[s._v("str-insert(String,insertStr,'位置') 插入字符串")])]),s._v(" "),e("h4",{attrs:{id:"color及相关函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#color及相关函数"}},[s._v("#")]),s._v(" color及相关函数")]),s._v(" "),e("p",[s._v("       color也是sass中的一种数据类型，"),e("code",[s._v("rgb()")]),s._v("、"),e("code",[s._v("rgba()")]),s._v("和"),e("code",[s._v("red")]),s._v("都算作是color。"),e("br"),s._v("\n       在sass中还有为color提供的一些函数，如下：")]),s._v(" "),e("ul",[e("li",[s._v("hsl("),e("code",[s._v("色相：0°-360°")]),s._v(","),e("code",[s._v("饱和度：0-100%")]),s._v(","),e("code",[s._v("明度：0-100%")]),s._v(")")]),s._v(" "),e("li",[s._v("hsla("),e("code",[s._v("色相：0°-360°")]),s._v(","),e("code",[s._v("饱和度：0-100%")]),s._v(","),e("code",[s._v("明度：0-100%")]),s._v(","),e("code",[s._v("透明度")]),s._v(")")]),s._v(" "),e("li",[s._v("adjust-hue("),e("code",[s._v("颜色")]),s._v(","),e("code",[s._v("参数")]),s._v("):可以调整色相的值")]),s._v(" "),e("li",[s._v("lighten("),e("code",[s._v("颜色")]),s._v(","),e("code",[s._v("百分数")]),s._v("):让颜色更白")]),s._v(" "),e("li",[s._v("darken("),e("code",[s._v("颜色")]),s._v(","),e("code",[s._v("百分数")]),s._v(") :让颜色更黑")]),s._v(" "),e("li",[s._v("saturate("),e("code",[s._v("颜色")]),s._v(","),e("code",[s._v("百分数")]),s._v("):增加颜色的纯度，也就是饱和度")]),s._v(" "),e("li",[s._v("desaturate("),e("code",[s._v("颜色")]),s._v(","),e("code",[s._v("百分数")]),s._v(") :减少颜色的纯度")]),s._v(" "),e("li",[s._v("opacify("),e("code",[s._v("颜色")]),s._v(","),e("code",[s._v("小数")]),s._v("):增加不透明度")]),s._v(" "),e("li",[s._v("transparentize("),e("code",[s._v("颜色")]),s._v(","),e("code",[s._v("小数")]),s._v(") :减少不透明度")])]),s._v(" "),e("h4",{attrs:{id:"list及相关函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list及相关函数"}},[s._v("#")]),s._v(" list及相关函数")]),s._v(" "),e("p",[s._v("       list也是sass中的一种数据类型，"),e("code",[s._v("1px solid red")]),s._v("、"),e("code",[s._v("0 0 0 0")]),s._v("和"),e("code",[s._v("1px,1px")]),s._v("都算作是list，在sass中list的分隔符可以是空格、逗号、括号等。当一个数据中出现多总分隔符时会被认定为多个列表，如下：")]),s._v(" "),e("div",{staticClass:"language-scss extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scss"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[s._v("padding")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 5px 10px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 5px 0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这是两个列表list")]),s._v("\n")])])]),e("p",[s._v("       在sass中还有为list提供的一些函数，如下：")]),s._v(" "),e("ul",[e("li",[s._v("length():返回列表项目个数")]),s._v(" "),e("li",[s._v("nth('list','序号'):得到对应序号里边的数据")]),s._v(" "),e("li",[s._v("index('list','value'):判断指定项目在列表里的位置")]),s._v(" "),e("li",[s._v("append('list','value','分隔符【可选】'):向列表追加项目")]),s._v(" "),e("li",[s._v("join('list','value','分隔符【可选】'):组合列表")])]),s._v(" "),e("h4",{attrs:{id:"map及相关函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#map及相关函数"}},[s._v("#")]),s._v(" Map及相关函数")]),s._v(" "),e("p",[s._v("       map也是sass中的一种数据类型，"),e("code",[s._v("(light: #ffffff, dark: #000000)")]),s._v("算作是map。"),e("br"),s._v("\n       在sass中还有为map提供的一些函数，如下：")]),s._v(" "),e("ul",[e("li",[s._v("length():查看变量中有几个键值对。")]),s._v(" "),e("li",[s._v("map-get("),e("code",[s._v("map")]),s._v(","),e("code",[s._v("key")]),s._v("):可以根据键来得到值")]),s._v(" "),e("li",[s._v("map-keys("),e("code",[s._v("map")]),s._v("):返回对象当中的所有 key")]),s._v(" "),e("li",[s._v("map-values("),e("code",[s._v("map")]),s._v("):返回对象当中所有的 value")]),s._v(" "),e("li",[s._v("map-has-key("),e("code",[s._v("map")]),s._v(","),e("code",[s._v("key")]),s._v("):判断对象当中是否有指定的 key")]),s._v(" "),e("li",[s._v("map-merge("),e("code",[s._v("map")]),s._v(", "),e("code",[s._v("map")]),s._v(") 把两个 Map 合并到一起")]),s._v(" "),e("li",[s._v("map-remove("),e("code",[s._v("map")]),s._v(","),e("code",[s._v("key")]),s._v("):移除指定的键值对")]),s._v(" "),e("li",[s._v("map-has-key("),e("code",[s._v("map")]),s._v(","),e("code",[s._v("key")]),s._v("):判断对象当中是否有指定的 key")]),s._v(" "),e("li",[s._v("map-has-key("),e("code",[s._v("map")]),s._v(","),e("code",[s._v("key")]),s._v("):判断对象当中是否有指定的 key")])]),s._v(" "),e("h4",{attrs:{id:"boolean布尔值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#boolean布尔值"}},[s._v("#")]),s._v(" boolean布尔值")]),s._v(" "),e("p",[s._v("       boolean也是sass中的一种数据类型，"),e("code",[s._v("true/false")]),s._v("算作是boolean。")]),s._v(" "),e("h3",{attrs:{id:"sass嵌套语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sass嵌套语法"}},[s._v("#")]),s._v(" sass嵌套语法")]),s._v(" "),e("p",[s._v("       在css文件中，对于一个嵌套层级较深的层级来说，要拿到内层的元素需要一层一层的取，当内层元素较多时，定位标签时，往往编写了大量的重复代码，费时费力且不易维护。"),e("br"),s._v("\n       在sass中，编写代码可以嵌套这些，就像是在html的层级一样，方便后期维护。")]),s._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[s._v("html:\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("ul")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("li")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("ul")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("a")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("p")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("name-p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])])]),e("p",[e("span",{staticStyle:{color:"red"}},[s._v("       在本文出现的实例代码毫无逻辑可言，也是可能是不推荐的写法，在本文中的作用仅是示例而已。")])]),s._v(" "),e("p",[e("img",{attrs:{src:t(594),alt:"嵌套属性示例"}})]),s._v(" "),e("p",[s._v("       在sass中，当需要编写"),e("code",[s._v("：hover")]),s._v("、"),e("code",[s._v(":focus")]),s._v("等选择器时，需要添加连接符"),e("code",[s._v("&")]),s._v("。")]),s._v(" "),e("p",[e("img",{attrs:{src:t(595),alt:"事件选择器嵌套"}})]),s._v(" "),e("p",[s._v("       在sass中，如果子选择器的的一部分是父选择器，也可以使用连接符"),e("code",[s._v("&")]),s._v("引用父选择器。")]),s._v(" "),e("p",[e("img",{attrs:{src:t(596),alt:"引用父选择器"}})]),s._v(" "),e("p",[s._v("       在sass中，类可以嵌套，属性也可以。")]),s._v(" "),e("p",[e("img",{attrs:{src:t(597),alt:"属性嵌套"}})]),s._v(" "),e("h3",{attrs:{id:"属性复用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#属性复用"}},[s._v("#")]),s._v(" 属性复用")]),s._v(" "),e("h4",{attrs:{id:"mixin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mixin"}},[s._v("#")]),s._v(" mixin")]),s._v(" "),e("p",[s._v("       如果看过本人写的vue文章，应该对"),e("code",[s._v("mixin")]),s._v("不陌生，简单来说，"),e("code",[s._v("mixin")]),s._v("就是定义的是一个可供当前所有选择使用的公共属性。定义方式如下：")]),s._v(" "),e("div",{staticClass:"language-scss extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scss"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@mixin")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mixinName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vlaue1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("value2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("..."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在下图中，我们会给一个示例供大家理解。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("p",[e("img",{attrs:{src:t(598),alt:"mixin混合"}}),e("br"),s._v("\n       通过图例大家应该大致知道定义"),e("code",[s._v("mixin")]),s._v("需要使用"),e("code",[s._v("@mixin")]),s._v("，当调用时，则需要用到"),e("code",[s._v("@include")]),s._v("。同时还有一些需要注意的点，如下："),e("br"),s._v(" "),e("span",{staticStyle:{color:"red"}},[s._v("              1. 定义引用mixin时是可以传递参数的。如果定义了初始值，在没有传值的情况下会使用初始定义的值。")]),e("br"),s._v(" "),e("span",{staticStyle:{color:"red"}},[s._v("              2. 引用时传递的参数应按照定义时的顺序。")]),e("br"),s._v(" "),e("span",{staticStyle:{color:"red"}},[s._v("              3. 如果指定了参数的值，如图中所示，则也可以不按顺序。")])]),s._v(" "),e("h4",{attrs:{id:"extend继承"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extend继承"}},[s._v("#")]),s._v(" extend继承")]),s._v(" "),e("p",[s._v("       当两个类的内容大致一致时，我们当然可以把公共部分抽离出去定义为一个"),e("code",[s._v("mixin")]),s._v("来减少代码编写，在这里我们介绍的是继承。"),e("br"),s._v("\n       继承，简单来说就是继承者将获得被继承着的一切，当然被继承着所拥有的内容也不会被删除。"),e("br"),s._v(" "),e("img",{attrs:{src:t(599),alt:"mixin混合"}})]),s._v(" "),e("h4",{attrs:{id:"自定义函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义函数"}},[s._v("#")]),s._v(" 自定义函数")]),s._v(" "),e("p",[s._v("       当"),e("code",[s._v("extend")]),s._v("和"),e("code",[s._v("mixin")]),s._v("无法满足我们的要求时，比如需要判断、控制等情况时，貌似没有很好地解决方法，其实在sass中还有第三种公用数据的方法，自定义函数。"),e("br"),s._v(" "),e("img",{attrs:{src:t(600),alt:"自定义函数"}})]),s._v(" "),e("h3",{attrs:{id:"流程控制语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#流程控制语句"}},[s._v("#")]),s._v(" 流程控制语句")]),s._v(" "),e("h4",{attrs:{id:"if"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#if"}},[s._v("#")]),s._v(" @if")]),s._v(" "),e("p",[s._v("       同在js判断中一样，选择满足条件的路径。"),e("br"),s._v(" "),e("img",{attrs:{src:t(601),alt:"自定义函数"}})]),s._v(" "),e("h4",{attrs:{id:"for"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for"}},[s._v("#")]),s._v(" @for")]),s._v(" "),e("p",[s._v("       同在js循环条件一样，知道条件不满足时取消循环。例如")]),s._v(" "),e("div",{staticClass:"language-scss extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scss"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 开始值 "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("through")]),s._v(" 结束值   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 相当于 ≤")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 开始值 to 结束值        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 相当于 <")]),s._v("\n \n")])])]),e("p",[e("img",{attrs:{src:t(602),alt:"自定义函数"}})]),s._v(" "),e("h4",{attrs:{id:"each-in"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#each-in"}},[s._v("#")]),s._v(" @each in")]),s._v(" "),e("p",[s._v("       在sass中，还有一个循环是用来遍历列表的——"),e("code",[s._v("@each in")]),s._v("。"),e("br"),s._v(" "),e("img",{attrs:{src:t(603),alt:"自定义函数"}})]),s._v(" "),e("h4",{attrs:{id:"while"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#while"}},[s._v("#")]),s._v(" @while")]),s._v(" "),e("p",[s._v("       同在js循环条件一样，知道条件不满足时取消循环。"),e("br"),s._v(" "),e("img",{attrs:{src:t(604),alt:"自定义函数"}})]),s._v(" "),e("h3",{attrs:{id:"import"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[s._v("#")]),s._v(" @import")]),s._v(" "),e("p",[s._v("       受组件化编码的影响，我们编写的样式可能在不同的文件中，这时就需要使用"),e("code",[s._v("@import")]),s._v("引入，如下：")]),s._v(" "),e("div",{staticClass:"language-scss extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scss"}},[e("code",[s._v("正常引入："),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@import")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main.scss"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nPartials引入："),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("@import")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"base"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("       如果使用Partials引入，要求被引入的scss文件命名以"),e("code",[s._v("_")]),s._v("开头，此时引入可以不带后缀名。")]),s._v(" "),e("h3",{attrs:{id:"注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[s._v("#")]),s._v(" 注释")]),s._v(" "),e("p",[s._v("       sass为我们提供了三种注释的写法，如下：")]),s._v(" "),e("div",{staticClass:"language-scss extra-class"},[e("pre",{pre:!0,attrs:{class:"language-scss"}},[e("code",[s._v("1. 双斜线的单行注释：\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 我是单行注释")]),s._v("\n2. 斜线加星号的多行注释\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n    这里是\n    多行注释\n  */")]),s._v("\n3. 斜线、星号、感叹号的强制注释\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*!\n    这里的注释内容即使经历编译也会以多行注释的形式展示在编译后的css文件中，\n    不加感叹号的多行注释及单行注释在在编译时会被删除。\n  */")]),s._v("\n")])])]),e("h3",{attrs:{id:"警告与报错"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#警告与报错"}},[s._v("#")]),s._v(" 警告与报错")]),s._v(" "),e("ul",[e("li",[s._v("@warning ：警告信息 错误信息只输出到命令提示行")]),s._v(" "),e("li",[s._v("@error :错误信息 会输出到命令行和 css 文件当中")])])])}),[],!1,null,null,null);a.default=r.exports}}]);